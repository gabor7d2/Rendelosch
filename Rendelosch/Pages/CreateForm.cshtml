@page
@using Rendelosch.Models
@model Rendelosch.Pages.CreateForm

@{
    ViewData["Title"] = "Új űrlap létrehozás";
}

<div class="container-lg mt-4 d-flex flex-row column-gap-5">
    @* Form editor *@
    <div class="w-50 d-flex flex-column mb-4">
        <p class="h3 mb-4 text-center">Űrlap adatai</p>
        <div class="mb-4">
            <label for="formTitleInput" class="form-label h5">Űrlap neve</label>
            <input type="text" id="formTitleInput" class="form-control">
        </div>
        <div class="mb-4">
            <label for="formFromDateInput" class="form-label h5">Kitöltési időszak</label>
            <div class="input-group mb-1">
                <input type="date" id="formFromDateInput" class="form-control"/>
                <input type="time" id="formFromTimeInput" class="form-control"/>
                <span class="input-group-text">-tól/-től</span>
            </div>
            <div class="input-group">
                <input type="date" id="formToDateInput" class="form-control"/>
                <input type="time" id="formToTimeInput" class="form-control"/>
                <span class="input-group-text">-ig</span>
            </div>
        </div>
        <div class="mb-4">
            <label for="formFieldName" class="form-label h5">Új mező</label>
            <input type="text" id="formFieldId" placeholder="Azonosító (pl.: abc_def, xyz)" class="form-control  mb-1"/>
            <input type="text" id="formFieldName" placeholder="Megnevezés (pl.: Méret, Mennyiség)" class="form-control mb-1"/>
            <button type="button" id="formNewFieldButton" class="btn btn-sm btn-outline-primary" onclick="addField()">+ mező hozzáadása</button>
        </div>
        <button id="submitButton" class="mt-auto btn btn-primary" onclick="submitForm()">
            Űrlap létrehozása
        </button>
    </div>
    
    @* Form preview *@
    <div class="w-50 d-flex flex-column mb-4">
        <p class="h3 mb-4 text-center">Előnézet</p>
        <div id="formPreview" class="card" />
    </div>
</div>

<script>
    //-- In-browser variables --//
    
    const regex_fieldId = /^[a-z0-9_]+$/;
    const regex_fieldName = /^[^:;]+$/;
    
    let formTitle_valid = false;
    let formFieldId_valid = false;
    let formFieldName_valid = false;
    
    let formFields = [];
    
    //-- Event listeners --//
    
    document.getElementById("formTitleInput").addEventListener("input", function() {
        formTitle_valid = this.value.length > 0;
        updatePreview();
        updateButtons();
    });
    
    document.getElementById("formFieldId").addEventListener("input", function() {
        formFieldId_valid=!(this.value.length < 1 || !regex_fieldId.test(this.value));
        updateButtons();
    });
    
    document.getElementById("formFieldName").addEventListener("input", function() {
        formFieldName_valid=!(this.value.length < 1 || !regex_fieldName.test(this.value));
        updateButtons();
    });
    
    //-- Functions --//
    
    function updateButtons() {
        document.getElementById("formNewFieldButton").disabled = !(formFieldId_valid && formFieldName_valid);
        document.getElementById("submitButton").disabled = !(formTitle_valid && formFields.length > 0);
    }
    
    function updatePreview() {
        const formPreview = document.getElementById("formPreview");
        const formTitle = document.getElementById("formTitleInput").value;
        
        let preview = "";
        
        // Clear the preview
        formPreview.innerHTML = "";
        
        // Add form title
        preview += `
            <div class="card">
                <div class="card-header text-center h4">${formTitle}</div>
                <div class="card-body">
        `;
        
        // Add form fields
        formFields.forEach(field => {
            preview += `
                <div class="mb-3">
                    <label class="form-label">${field.name}</label>
                    <input type="text" class="form-control form-control-sm">
                </div>
            `;
        });
        
        // Add form end
        preview += `
                <p class="mb-3"><small>A beküldésre még várnod kell <b>##</b> napot. Az űrlap kitöltésére <b>##</b> napon keresztül lesz lehetőséged.</small></p>
                <div class="d-flex justify-content-end">
                    <button type="button" class="btn btn-outline-danger btn-sm me-3">Újra kezdés</button>
                    <button type="button" class="btn btn-success btn-sm">Beadás</button>
                </div>
            </div>
        </div>
        `;
        
        formPreview.innerHTML = preview;
    }
    
    function addField() {
        const fieldId = document.getElementById("formFieldId").value;
        const fieldName = document.getElementById("formFieldName").value;
        
        formFields.push({ id: fieldId, name: fieldName });
        updatePreview();
        
        document.getElementById("formFieldId").value = "";
        document.getElementById("formFieldName").value = "";
        formFieldId_valid = false;
        formFieldName_valid = false;
        updateButtons();
    }
    
    async function submitForm() {
        const formTitle = document.getElementById("formTitleInput").value;
        const formFromDate = document.getElementById("formFromDateInput").value + " " + document.getElementById("formFromTimeInput").value;
        const formToDate = document.getElementById("formToDateInput").value + " " + document.getElementById("formToTimeInput").value;
        
        let formData = new FormData();
        formData.set("title", formTitle);
        formData.set("fromDate", formFromDate);
        formData.set("toDate", formToDate);
        formData.set("fields", formFields.map((f => `${f.id}:${f.name}`)).join(";"));
        
        console.log(formData);
        
        try { 
            const response = await fetch("/CreateForm", { 
                method: "POST", 
                body: formData,
            }); 
            
            let responseJson = await response.json();
            console.log(responseJson);
            if (responseJson.ok) {
                alert(`A(z) ${formTitle} űrlap sikeresen létrehozva!`);
                window.location.href = "/";
            } else { 
                console.error(response);
                alert("Hiba történt a létrehozáskor!");
            } 
        } catch (e) {
            console.error("Server error: ", e); 
        }
    }
    
    //-- Initial setup --//
    
    updateButtons();
    updatePreview();
</script>