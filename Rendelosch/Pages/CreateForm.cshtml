@page
@using Rendelosch.Models
@model Rendelosch.Pages.CreateForm

@{
    ViewData["Title"] = "CreateForm";
}

<div class="container-lg mt-4">
    <form method="post">
        <div class="card">
            <div class="card-body row">
                <div class="col col-6">
                    <label for="formName" class="form-label">Űrlap neve</label>
                    <input type="text" name="formName" id="formName" class="form-control" aria-describedby="formNameHelp">
                    <div id="formNameHelp" class="form-text">
                        Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji.
                    </div>
                    <input type="submit" name="Űrlap létrehozása" class="mt-auto"/>
                </div>
                <div class="col col-6">
                    <label for="fieldName" class="form-label">Új mező</label>
                    <div class="input-group">
                        <input type="text" id="fieldId" class="form-control" placeholder="Azonosító">
                        <input type="text" id="fieldName" class="form-control" placeholder="Megnevezés" aria-describedby="formNameHelp">
                        <button class="btn btn-outline-primary" type="button" onclick="addField()">+ Hozzáadás</button>
                    </div>
                    <div id="fieldNameHelp" class="form-text mb-4">
                        Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji.
                    </div>
                    <label id="fieldsLabel" class="form-label">Mezők (0 db)</label>
                    <div id="fields" class="d-flex flex-column gap-2"></div>
                </div>
            </div>
        </div>
    </form>
</div>

<script>
    let numberOfFields = 0;

    function addField() {
        // Get input fields
        const input_id = document.getElementById("fieldId"); // ID of the field
        const input_name = document.getElementById("fieldName"); // Name of the field
        const fields = document.getElementById("fields"); // Div for displayed fields
        const fields_label = document.getElementById("fieldsLabel"); // Label for displayed fields
        
        // Displayed field
        const field_div = document.createElement("div");
        field_div.innerHTML = "<p class='mb-0'>" + input_name.value + " (ID: " + input_id.value + ")</p>";
        fields.appendChild(field_div);
        
        // Hidden input field for each created fields
        const field_hidden = document.createElement("input");
        field_hidden.type = "hidden";
        field_hidden.name = "fields";
        field_hidden.value = input_id.value + ";" + input_name.value;
        field_div.appendChild(field_hidden);
        
        // Update number of fields label
        numberOfFields++;
        fields_label.innerHTML = "Mezők (" + numberOfFields + " db)";
        
        // Clear input fields
        input_id.value = "";
        input_name.value = "";
    }
</script>